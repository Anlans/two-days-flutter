### 第一课
Text(
  '内容'i,
  style: TextStyle(
    color: ,
    background: ,
    ...
  )
)


--------------------------------

Text.rich(
  TextSpan(
    children: [
      TextSpan('aaa'),
      TextSpan('bbb'),

    ]
  )

)





--------------------------------

DefaultTextStyle子节点,孙子,...的默认字体样式
用途: 整个程序/整个页面初始文本样式







--------------------------------
Color(0xxxx)

1.16进制
0xffff0000
ff alpha        0~255  00~ff
ff red
00 green
00 blue

2.分开写
Color.fromARGB(alpha, red, green, blue)
Color.fromRGBO(red, green, blue, opacity)


--------------------------------



3. Colors.red/green/blue

--------------------------------
### 第二课
Image
Image.asset     引入源码资源文件
Image.file      从用户本地文件系统读取
Image.network   读取网络的图片
Image.memory    从内存中读取图片


--------------------------------
越小越好--flutter尽量少的打包文件
需要我声明打包什么东西


--------------------------------
资源文件一定要先声明,不声明不打包

1.pubspec声明 => pubspec.yaml
flutter
  assets:
    - assets/a.png
    - assets/b.png

2.使用 => main.dart
  child: Image.assert('资源访问符')




--------------------------------
Image.asset(
  'src',
  width: xxx,
  height: xxx,
  fit: BoxFit.fitWidth,
);


--------------------------------

MediaQuery--媒体查询
  获取屏幕信息

var screen=MediaQuery.of(context); //context
screen.size.width
screen.size.height

--------------------------------
###第三课
Icon

Icon(
  Icon.favorite
  color: ,
  size: ,
);


--------------------------------
### 第四课
组件:
布局组件--搭架子
1.Container (容器)            单子级child:
  最普通的 (类似html中div)
  width
  height
  alignment

  decoration: BonxDecoration(
    color 背景色
    image
    border
  )




2.Expanded (扩展)             单子级child:
  占据尽可能大的空间

  Spacer()




3.Row/Colum (行/列)           多子级 children:


--------------------------------

4.Stack (堆栈)                多子级 children:
  类似绝对定位

  Container

  Positioned

  SingleChildScrollView



5.GridView (格子3x3 8x8 ....) 多子级 children:
  n*n

6.Table(表格)                 多自己 children:



--------------------------------
### 第五课
自适应 Row Column

### 第六课
堆叠Stack

--------------------------------



--------------------------------






--------------------------------


--------------------------------








--------------------------------









--------------------------------

